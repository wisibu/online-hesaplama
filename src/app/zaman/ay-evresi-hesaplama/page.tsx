import type { Metadata } from 'next';
import CalculatorUI, { InputField, CalculationResult } from '@/components/CalculatorUI';
import RichContent from '@/components/RichContent';

const moonPhases: { name: string, emoji: string }[] = [
    { name: "Yeni Ay", emoji: "ğŸŒ‘" },
    { name: "Hilal", emoji: "ğŸŒ’" },
    { name: "Ä°lk DÃ¶rdÃ¼n", emoji: "ğŸŒ“" },
    { name: "BÃ¼yÃ¼yen Kambur Ay", emoji: "ğŸŒ”" },
    { name: "Dolunay", emoji: "ğŸŒ•" },
    { name: "KÃ¼Ã§Ã¼len Kambur Ay", emoji: "ğŸŒ–" },
    { name: "Son DÃ¶rdÃ¼n", emoji: "ğŸŒ—" },
    { name: "KÃ¼Ã§Ã¼len Ay", emoji: "ğŸŒ˜" },
];

// Algorithm adapted from https://gist.github.com/endel/dfe6bb2fbe679781948c
const getMoonPhase = (date: Date): { phase: number, age: number } => {
    let year = date.getFullYear();
    let month = date.getMonth() + 1; // JS months are 0-11
    const day = date.getDate();

    if (month < 3) {
        year--;
        month += 12;
    }

    const c = 365.25 * year;
    const e = 30.6 * month;
    let jd = c + e + day - 694039.09; // Julian date
    jd /= 29.5305882; // Divide by the moon cycle
    let b = Math.floor(jd); // Integer part
    jd -= b; // Fractional part
    b = Math.round(jd * 8); 

    if (b >= 8) {
        b = 0; // 0 and 8 are the same phase
    }
    
    const age = jd * 29.53;

    return { phase: b, age };
};


const pageConfig = {
  title: "Ay Evresi Hesaplama | OnlineHesaplama",
  description: "Belirli bir tarih iÃ§in Ay'Ä±n evresini (Yeni Ay, Hilal, Dolunay vb.) ve aydÄ±nlanma oranÄ±nÄ± anÄ±nda Ã¶ÄŸrenin. Astronomi meraklÄ±larÄ± iÃ§in pratik bir araÃ§.",
  keywords: ["ay evresi hesaplama", "ayÄ±n evreleri", "yeni ay ne zaman", "dolunay ne zaman", "ay takvimi"],
  calculator: {
    title: "Ay Evresi Hesaplama",
    description: (
      <p className="text-sm text-gray-600">
        Ay'Ä±n hangi evrede olduÄŸunu gÃ¶rmek istediÄŸiniz tarihi seÃ§in.
      </p>
    ),
    inputFields: [
      { id: 'date', label: 'Tarih', type: 'date', defaultValue: new Date().toISOString().split('T')[0] },
    ] as InputField[],
    calculate: async (inputs: { [key: string]: string | number }): Promise<CalculationResult | null> => {
        'use server';
        
        const dateStr = inputs.date as string;
        if (!dateStr) {
             return { summary: { error: { label: 'Hata', value: 'LÃ¼tfen geÃ§erli bir tarih girin.' } } };
        }
        
        const date = new Date(dateStr);
        // Adjust for timezone offset to prevent off-by-one day errors
        const userTimezoneOffset = date.getTimezoneOffset() * 60000;
        const correctedDate = new Date(date.getTime() + userTimezoneOffset);


        const { phase, age } = getMoonPhase(correctedDate);
        const phaseInfo = moonPhases[phase];

        const summary = {
            phaseName: { label: 'Ay\'Ä±n Evresi', value: `${phaseInfo.name} ${phaseInfo.emoji}` },
            moonAge: { label: 'Ay\'Ä±n YaÅŸÄ±', value: `${age.toFixed(1)} gÃ¼n` },
            illumination: { label: 'AydÄ±nlanma (YaklaÅŸÄ±k)', value: `${(age <= 14.765 ? (age / 14.765) * 100 : 100 - ((age - 14.765) / 14.765) * 100).toFixed(0)}%` },
        };
          
        return { summary };
    },
  },
  content: {
    sections: [
      {
        title: "Ay'Ä±n Evreleri Nedir?",
        content: (
          <p>
            Ay'Ä±n evreleri, Ay'Ä±n DÃ¼nya etrafÄ±ndaki yÃ¶rÃ¼ngesi boyunca GÃ¼neÅŸ'e gÃ¶re konumunun deÄŸiÅŸmesiyle ortaya Ã§Ä±kan, Ay'Ä±n aydÄ±nlÄ±k yÃ¼zÃ¼nÃ¼n DÃ¼nya'dan farklÄ± ÅŸekillerde gÃ¶rÃ¼lmesidir. Ay, kendisi Ä±ÅŸÄ±k Ã¼retmez, sadece GÃ¼neÅŸ'ten aldÄ±ÄŸÄ± Ä±ÅŸÄ±ÄŸÄ± yansÄ±tÄ±r. DÃ¶ngÃ¼, GÃ¼neÅŸ ve DÃ¼nya arasÄ±ndayken oluÅŸan ve DÃ¼nya'dan gÃ¶rÃ¼lmeyen "Yeni Ay" evresiyle baÅŸlar, "Dolunay" ile zirveye ulaÅŸÄ±r ve tekrar Yeni Ay'a dÃ¶nerek yaklaÅŸÄ±k 29.5 gÃ¼nde tamamlanÄ±r.
          </p>
        )
      }
    ],
    faqs: [
      {
        question: "Ay'Ä±n evreleri neden olur?",
        answer: "Bu tamamen GÃ¼neÅŸ, DÃ¼nya ve Ay'Ä±n birbirlerine gÃ¶re konumlarÄ±yla ilgilidir. Ay, DÃ¼nya'nÄ±n etrafÄ±nda dÃ¶ndÃ¼kÃ§e, GÃ¼neÅŸ tarafÄ±ndan aydÄ±nlatÄ±lan yarÄ±m kÃ¼resinin farklÄ± bir bÃ¶lÃ¼mÃ¼nÃ¼ gÃ¶rÃ¼rÃ¼z. Bu da bizim Ay'Ä± hilal, dÃ¶rdÃ¼n veya dolunay gibi farklÄ± ÅŸekillerde algÄ±lamamÄ±za neden olur."
      },
      {
        question: "Ay'Ä±n bir tam dÃ¶ngÃ¼sÃ¼ ne kadar sÃ¼rer?",
        answer: "Ay'Ä±n bir Yeni Ay evresinden bir sonraki Yeni Ay evresine kadar geÃ§en sÃ¼re, yani tam bir evre dÃ¶ngÃ¼sÃ¼, yaklaÅŸÄ±k 29.53 gÃ¼n sÃ¼rer. Bu sÃ¼reye 'sinodik dÃ¶nem' denir."
      },
      {
        question: "Bu hesaplama ne kadar doÄŸrudur?",
        answer: "Bu hesaplayÄ±cÄ±, genel amaÃ§lÄ± kullanÄ±m iÃ§in oldukÃ§a doÄŸru ve gÃ¼venilir bir astronomik algoritma kullanÄ±r. Ancak, Ay'Ä±n yÃ¶rÃ¼ngesindeki kÃ¼Ã§Ã¼k deÄŸiÅŸimler (pertÃ¼rbasyonlar) nedeniyle bilimsel veya hassas gÃ¶zlemler iÃ§in milimetrik sonuÃ§lar vermeyebilir. GÃ¼nlÃ¼k kullanÄ±m iÃ§in sonuÃ§lar yeterince hassastÄ±r."
      }
    ]
  }
};

export const metadata: Metadata = {
  title: pageConfig.title,
  description: pageConfig.description,
  keywords: pageConfig.keywords,
  openGraph: {
    title: pageConfig.title,
    description: pageConfig.description,
  },
};

export default function Page() {
  return (
    <>
      <CalculatorUI 
        title={pageConfig.calculator.title} 
        inputFields={pageConfig.calculator.inputFields} 
        calculate={pageConfig.calculator.calculate} 
        description={pageConfig.calculator.description}
        resultTitle="Ay Evresi SonuÃ§larÄ±"
      />
      <RichContent sections={pageConfig.content.sections} faqs={pageConfig.content.faqs} />
    </>
  );
}